name: Build image and push in dockerhub
on:
  push:
    paths:
      - 'user-service/**'
      - 'product-service/**'
      - 'cart/**'
      - 'payment/**'

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      user_changed: ${{ steps.filter.outputs.user }}
      product_changed: ${{ steps.filter.outputs.product }}
      order_changed: ${{ steps.filter.outputs.order }}
      payment_changed: ${{ steps.filter.outputs.payment }}
    steps:
      - uses: actions/checkout@v3

      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            user:
              - 'user-service/**'
            product:
              - 'product-service/**'
            order:
              - 'cart/**'
            payment:
              - 'payment/**'

  deploy:
    needs: filter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Docker Login
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # User Service Deploy
      - name: Deploy User Service
        if: needs.filter.outputs.user_changed == 'true'
        run: |
          echo "Deploying User Service..."
          cd user-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/userservice:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/userservice:latest

      # Product Service Deploy
      - name: Deploy Product Service
        if: needs.filter.outputs.product_changed == 'true'
        run: |
          echo "Deploying Product Service..."
          cd product-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ecomproduct:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/ecomproduct:latest

      # Order Service Deploy
      - name: Deploy Order Service
        if: needs.filter.outputs.order_changed == 'true'
        run: |
          echo "Deploying Order Service..."
          cd cart
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ecomcart:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/ecomcart:latest

      # Payment Service Deploy
      - name: Deploy Payment Service
        if: needs.filter.outputs.payment_changed == 'true'
        run: |
          echo "Deploying Payment Service..."
          cd payment
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ecompayment:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/ecompayment:latest
